jointName  = SimulationInfo.Components.IndexPIP.Name;
compType   = SimulationInfo.Components.IndexPIP.componentType.charID;
compNumber = SimulationInfo.Components.IndexPIP.componentNumber.numID;
seqNum     = SimulationInfo.Components.IndexPIP.SeqNum;
nDOF       = SimulationInfo.Components.IndexPIP.nDOF;

% sending packet to MSMS
udpPacketSize = 1+1*(2+2+2+nDOF*4);
udpPacket = [];
udpPacket = [ udpPacket; int8(1) ]; % change 1 feature
udpPacket = [ udpPacket; int8( compType(1) ); int8( compType(2) ) ]; % Joint ID
udpPacket = [ udpPacket; flipud( typecast( int16( componentNumber ), 'int8' )' ) ]; % Neck ID
udpPacket = [ udpPacket; flipud( typecast( int16( nDOF ), 'int8' )' ) ]; % 3 DOF in radians
m1 = length( udpPacket ) + 1;
for n = 1:nDOF
    udpPacket = [ udpPacket; flipud( typecast( single( 0 ), 'int8' )' ) ]; %#ok<AGROW> % zero radians
end
if( length( udpPacket ) ~= udpPacketSize )
    warning( 'upd packet size error' ); %#ok<WNTAG>
end

for n = 0.0:(0.025*(2*pi)):(2*pi)
    for m = 1:nDOF
        udpPacket( (m1+4*(m-1)):(m1+4*(m-1)+3) ) = flipud( typecast( single( n ), 'int8' )' );
    end
    judp( 'send', 11114, '127.0.0.1', typecast( udpPacket, 'int8' ) )
    pause( 0.01 );
end
fprintf( '\n' );

